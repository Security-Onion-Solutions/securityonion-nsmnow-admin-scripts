#!/bin/sh

set -e

case "$1" in
    configure)
        
	# Configure sshd to check status of ssh connections
	if [ -f /usr/sbin/nsm_server_configure_sshd ]; then
		chmod +x /usr/sbin/nsm_server_configure_sshd
		/usr/sbin/nsm_server_configure_sshd || echo "Error running nsm_server_configure_sshd."
	fi

	# Avoid checking for new versions of Ubuntu
	FILE="/etc/update-manager/release-upgrades"
	[ -f $FILE ] && sed -i 's|^Prompt=.*$|Prompt=never|g' $FILE || echo "Unable to access $FILE."
	FILE="/var/lib/update-notifier/release-upgrade-available"
	[ -f $FILE ] && rm -f $FILE
	
	# Make scripts executable
	chmod +x /usr/sbin/so-zeek-cron /usr/sbin/broctl /usr/sbin/so-clear-backlog /usr/sbin/so-sensor-backup-config /usr/sbin/so-server-backup-config /usr/sbin/so-nsm-watchdog /usr/sbin/so-nsm-common || echo "Error making scripts executable."
	
	# create log directory so cron scripts don't complain
	DIR="/var/log/nsm"
	[ -d $DIR ] || mkdir -p $DIR

	# update Squert database permissions if necessary
	if [ -d /var/lib/mysql/securityonion_db ] ; then
		mysql --defaults-file=/etc/mysql/debian.cnf -N -B -e "GRANT INSERT,UPDATE ON securityonion_db.object_mappings TO 'readonly'@'localhost';" || echo "Error updating permissions on Squert object_mappings."
	fi

	# clean up old cron jobs if they exist
	for FILE in /etc/cron.d/sensor-backup-config /etc/cron.d/server-backup-config /etc/cron.d/bro; do
		if [ -f $FILE ]; then
			echo "Removing old cron job ${FILE}"
			rm ${FILE} || echo "Error removing ${FILE}"
		fi
	done

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;


    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
