#!/bin/sh

set -e

case "$1" in
    configure)
        
	# Configure sshd to check status of ssh connections
	if [ -f /usr/sbin/nsm_server_configure_sshd ]; then
		chmod +x /usr/sbin/nsm_server_configure_sshd
		/usr/sbin/nsm_server_configure_sshd || echo "Error running nsm_server_configure_sshd."
	fi

	# Avoid checking for new versions of Ubuntu
	FILE="/etc/update-manager/release-upgrades"
	[ -f $FILE ] && sed -i 's|^Prompt=.*$|Prompt=never|g' $FILE || echo "Unable to access $FILE."
	FILE="/var/lib/update-notifier/release-upgrade-available"
	[ -f $FILE ] && rm -f $FILE
	
	# Make scripts executable
	chmod +x /usr/sbin/so-snorby-wipe /usr/sbin/so-bro-cron /usr/sbin/broctl /usr/sbin/so-common /usr/sbin/so-clear-backlog
	
	# create log directory so cron scripts don't complain
	DIR="/var/log/nsm"
	[ -d $DIR ] || mkdir -p $DIR

	# update Squert database permissions if necessary
	if [ -d /var/lib/mysql/securityonion_db ] ; then
		mysql --defaults-file=/etc/mysql/debian.cnf -N -B -e "GRANT INSERT,UPDATE ON securityonion_db.object_mappings TO 'readonly'@'localhost';" || echo "Error updating permissions on Squert object_mappings."
	fi

	# commenting out the following section because some users rely on sguild debug 2
	# example: https://github.com/Security-Onion-Solutions/security-onion/wiki/ThirdPartyIntegration
	# change sguild debug to 1
	#FILE='/etc/sguild/sguild.conf'
	#if [ -f $FILE ]; then
	#		if grep "set DEBUG 2" $FILE >/dev/null 2>&1; then
	#		echo "Sguild DEBUG is currently set to 2."
	#		echo "Setting sguild DEBUG to 1."
	#		sed -i 's|set DEBUG 2|set DEBUG 1|g' $FILE || echo "Error updating $FILE"
	#	fi
	#fi

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;


    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
