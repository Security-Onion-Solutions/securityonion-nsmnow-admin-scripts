Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-nsmnow-admin-scripts (20120724-0ubuntu0securityonion193) xenial; urgency=medium
 .
   * create logrotate jobs if necessary
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- securityonion-nsmnow-admin-scripts-20120724.orig/etc/cron.d/nsm-watchdog
+++ securityonion-nsmnow-admin-scripts-20120724/etc/cron.d/nsm-watchdog
@@ -5,4 +5,4 @@
 SHELL=/bin/sh
 PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
 
-4,9,14,19,24,29,34,39,44,49,54,59 *   * * * root  /usr/sbin/so-nsm-watchdog
+4,9,14,19,24,29,34,39,44,49,54,59 *   * * * root  /usr/sbin/so-nsm-watchdog >> /var/log/nsm/watchdog.log 2>&1
--- securityonion-nsmnow-admin-scripts-20120724.orig/etc/cron.d/so-sensor-backup-config
+++ securityonion-nsmnow-admin-scripts-20120724/etc/cron.d/so-sensor-backup-config
@@ -3,4 +3,4 @@
 # crontab entry to backup sensor config
 SHELL=/bin/bash
 PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
-0 1 * * * root /usr/sbin/so-sensor-backup-config
+0 1 * * * root /usr/sbin/so-sensor-backup-config >> /var/log/nsm/so-sensor-backup-config.log 2>&1
--- securityonion-nsmnow-admin-scripts-20120724.orig/etc/cron.d/so-server-backup-config
+++ securityonion-nsmnow-admin-scripts-20120724/etc/cron.d/so-server-backup-config
@@ -3,4 +3,4 @@
 # crontab entry to backup server config
 SHELL=/bin/sh
 PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
-0 1 * * * root /usr/sbin/so-server-backup-config
+0 1 * * * root /usr/sbin/so-server-backup-config >> /var/log/nsm/so-server-backup-config.log 2>&1
--- securityonion-nsmnow-admin-scripts-20120724.orig/usr/sbin/nsm_sensor_clean
+++ securityonion-nsmnow-admin-scripts-20120724/usr/sbin/nsm_sensor_clean
@@ -159,6 +159,21 @@ then
 	fi
 fi
 
+# If logrotate script doesn't already exist, create it
+FILE="/etc/logrotate.d/so-sensor-clean"
+if ! [ -f ${FILE} ]; then
+cat << EOF > ${FILE}
+/var/log/nsm/sensor-clean.log {
+    daily
+    rotate 7
+    copytruncate
+    compress
+    missingok
+    notifempty
+}
+EOF
+fi
+
 #
 # CLEAN
 #
--- securityonion-nsmnow-admin-scripts-20120724.orig/usr/sbin/so-nsm-watchdog
+++ securityonion-nsmnow-admin-scripts-20120724/usr/sbin/so-nsm-watchdog
@@ -15,7 +15,20 @@
 # You should have received a copy of the GNU General Public License
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
-LOG="/var/log/nsm/watchdog.log"
+# If logrotate script doesn't already exist, create it
+FILE="/etc/logrotate.d/so-nsm-watchdog"
+if ! [ -f ${FILE} ]; then
+cat << EOF > ${FILE}
+/var/log/nsm/watchdog.log {
+    daily
+    rotate 7
+    copytruncate
+    compress
+    missingok
+    notifempty
+}
+EOF
+fi
 
 # If server enabled, then check if stale
 FILE="/etc/nsm/servertab"
@@ -23,7 +36,8 @@ ENABLED=$(grep -v "#" ${FILE} 2>/dev/nul
 if [ ${ENABLED} -gt 0 ]; then
 	OUTPUT=$(/usr/sbin/nsm_server_ps-restart --if-stale)
 	if [ "${OUTPUT}" != "" ]; then
-		echo "$(date) ${OUTPUT}" >> ${LOG}
+		date
+		echo "${OUTPUT}"
 	fi
 fi
 
@@ -33,6 +47,7 @@ ENABLED=$(grep -v "#" ${FILE} 2>/dev/nul
 if [ ${ENABLED} -gt 0 ]; then
 	OUTPUT=$(/usr/sbin/nsm_sensor_ps-restart --if-stale)
 	if [ "${OUTPUT}" != "" ]; then
-		echo "$(date) ${OUTPUT}" >> ${LOG}
+		date
+		echo "${OUTPUT}"
 	fi
 fi
--- securityonion-nsmnow-admin-scripts-20120724.orig/usr/sbin/so-sensor-backup-config
+++ securityonion-nsmnow-admin-scripts-20120724/usr/sbin/so-sensor-backup-config
@@ -22,6 +22,21 @@ if [ ${ENABLED} -eq 0 ]; then
 	exit 1
 fi
 
+# If logrotate script doesn't already exist, create it
+FILE="/etc/logrotate.d/so-sensor-backup-config"
+if ! [ -f ${FILE} ]; then
+cat << EOF > ${FILE}
+/var/log/nsm/so-sensor-backup-config.log {
+    weekly
+    rotate 4
+    copytruncate
+    compress
+    missingok
+    notifempty
+}
+EOF
+fi
+
 # Set defaults
 SENSOR_CONFIG_BACKUPS=10
 SENSOR_CONFIG_BACKUP_DIR="/etc/nsm/backup"
@@ -33,8 +48,8 @@ SENSOR_CONFIG_BACKUP_DIR="/etc/nsm/backu
 mkdir -p ${SENSOR_CONFIG_BACKUP_DIR}
 
 # Create a backup for each sensor interface
-for i in $(cat /etc/nsm/sensortab | grep -v '#' | awk '{print $1}'); do 
-	/usr/sbin/nsm_sensor_backup-config --force-yes --sensor-name=${i} --backup-file=${SENSOR_CONFIG_BACKUP_DIR}/${i}-sensor-backup-`date +\%Y-\%m-\%d`.tar.gz >> /var/log/nsm/${i}-backup-config.log 2>&1
+for SENSOR in $(cat /etc/nsm/sensortab | grep -v '#' | awk '{print $1}'); do 
+	/usr/sbin/nsm_sensor_backup-config --force-yes --sensor-name=${SENSOR} --backup-file=${SENSOR_CONFIG_BACKUP_DIR}/${SENSOR}-sensor-backup-`date +\%Y-\%m-\%d`.tar.gz
 done
 
 # If old backups exist, delete them
--- securityonion-nsmnow-admin-scripts-20120724.orig/usr/sbin/so-server-backup-config
+++ securityonion-nsmnow-admin-scripts-20120724/usr/sbin/so-server-backup-config
@@ -22,6 +22,21 @@ if [ ${ENABLED} -eq 0 ]; then
 	exit 1
 fi
 
+# If logrotate script doesn't already exist, create it
+FILE="/etc/logrotate.d/so-server-backup-config"
+if ! [ -f ${FILE} ]; then
+cat << EOF > ${FILE}
+/var/log/nsm/so-server-backup-config.log {
+    weekly
+    rotate 4
+    copytruncate
+    compress
+    missingok
+    notifempty
+}
+EOF
+fi
+
 # Set defaults
 SERVER_CONFIG_BACKUPS=10
 SERVER_CONFIG_BACKUP_DIR="/etc/nsm/backup"
@@ -33,7 +48,7 @@ SERVER_CONFIG_BACKUP_DIR="/etc/nsm/backu
 mkdir -p ${SERVER_CONFIG_BACKUP_DIR}
 
 # Create a backup of the server config
-/usr/sbin/nsm_server_backup-config --force-yes --server-name=securityonion --backup-file=${SERVER_CONFIG_BACKUP_DIR}/securityonion-server-backup-`date +\%Y-\%m-\%d`.tar.gz >> /var/log/nsm/server-backup-config.log 2>&1
+/usr/sbin/nsm_server_backup-config --force-yes --server-name=securityonion --backup-file=${SERVER_CONFIG_BACKUP_DIR}/securityonion-server-backup-`date +\%Y-\%m-\%d`.tar.gz
 
 # If old backups exist, delete them
 if ls ${SERVER_CONFIG_BACKUP_DIR}/*server-backup*.tar.gz >/dev/null 2>&1; then
