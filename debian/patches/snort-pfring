Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-nsmnow-admin-scripts (20120724-0ubuntu0securityonion11) precise; urgency=low
 .
   * add support for multiple snort pfring instances
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- securityonion-nsmnow-admin-scripts-20120724.orig/usr/sbin/nsm_sensor_ps-stop
+++ securityonion-nsmnow-admin-scripts-20120724/usr/sbin/nsm_sensor_ps-stop
@@ -327,16 +327,25 @@ do
 	[ -z "$SKIP_SNORT_AGENT" ] && process_stop "snort_agent.tcl" "$PROCESS_PID_DIR/$SENSOR/snort_agent.pid" "snort_agent (sguil)"
         [ -z "$SKIP_PADS_AGENT" ] && process_stop "pads_agent.tcl" "$PROCESS_PID_DIR/$SENSOR/pads_agent.pid" "pads_agent (sguil)"
 
-	# stop the unified snort
+	# stop the IDS engine
         if grep -i "suricata" /etc/nsm/securityonion.conf >/dev/null
 	then
    		[ -z "$SKIP_SNORT_ALERT" ] && process_stop "suricata" "$PROCESS_PID_DIR/$SENSOR/suricata.pid" "suricata (alert data)"
 	else
-   		[ -z "$SKIP_SNORT_ALERT" ] && process_stop "snort" "$PROCESS_PID_DIR/$SENSOR/snortu.pid" "snort (alert data)"
+		for i in `seq 1 $IDS_LB_PROC`; do
+   			[ -z "$SKIP_SNORT_ALERT" ] && process_stop "snort" "$PROCESS_PID_DIR/$SENSOR/snortu-$i.pid" "snort (alert data)"
+		done
 	fi
 
 	# stop barnyard2
-	[ -z "$SKIP_BARNYARD2" ] && process_stop "barnyard2" "$PROCESS_PID_DIR/$SENSOR/barnyard2.pid" "barnyard2 (spooler, unified2 format)"
+        if grep -i "suricata" /etc/nsm/securityonion.conf >/dev/null
+	then
+		[ -z "$SKIP_BARNYARD2" ] && process_stop "barnyard2" "$PROCESS_PID_DIR/$SENSOR/barnyard2.pid" "barnyard2 (spooler, unified2 format)"
+	else
+		for i in `seq 1 $IDS_LB_PROC`; do
+			[ -z "$SKIP_BARNYARD2" ] && process_stop "barnyard2" "$PROCESS_PID_DIR/$SENSOR/barnyard2-$i.pid" "barnyard2 (spooler, unified2 format)"
+		done
+	fi
 
 	# stop sancp
 	[ -z "$SKIP_SANCP" ] && process_stop "sancp" "$PROCESS_PID_DIR/$SENSOR/sancp.pid" "sancp (session data)"
@@ -363,6 +372,6 @@ fi
 
 if [ -z "$SKIP_BRO" ] && grep -v "^#" /etc/nsm/sensortab>/dev/null ; then
         echo_msg 0 "Stopping: Bro"
-        sudo -u sguil /opt/bro/bin/broctl stop
+        /opt/bro/bin/broctl stop
 fi
 
--- securityonion-nsmnow-admin-scripts-20120724.orig/usr/sbin/nsm_sensor_ps-start
+++ securityonion-nsmnow-admin-scripts-20120724/usr/sbin/nsm_sensor_ps-start
@@ -337,12 +337,30 @@ do
 	# start agents
 	[ -z "$SKIP_PCAP_AGENT" ] && process_start "pcap_agent.tcl" "-c $PCAP_AGENT_CONFIG" "$PROCESS_PID_DIR/$SENSOR/pcap_agent.pid" "$PROCESS_LOG_DIR/$SENSOR/pcap_agent.log" "pcap_agent (sguil)"
 	[ -z "$SKIP_SANCP_AGENT" ] && process_start "sancp_agent.tcl" "-c $SANCP_AGENT_CONFIG" "$PROCESS_PID_DIR/$SENSOR/sancp_agent.pid" "$PROCESS_LOG_DIR/$SENSOR/sancp_agent.log" "sancp_agent (sguil)"
-	[ -z "$SKIP_SNORT_AGENT" ] && process_start "snort_agent.tcl" "-c $SNORT_AGENT_CONFIG" "$PROCESS_PID_DIR/$SENSOR/snort_agent.pid" "$PROCESS_LOG_DIR/$SENSOR/snort_agent.log" "snort_agent (sguil)"
+	
+	# need multiple snort_agents if running multiple snorts
+	if grep -i "suricata" /etc/nsm/securityonion.conf >/dev/null
+	then
+		[ -z "$SKIP_SNORT_AGENT" ] && process_start "snort_agent.tcl" "-c $SNORT_AGENT_CONFIG" "$PROCESS_PID_DIR/$SENSOR/snort_agent.pid" "$PROCESS_LOG_DIR/$SENSOR/snort_agent.log" "snort_agent (sguil)"
+	else
+		# Start $IDS_LB_PROC instances of snort_agent
+                for i in `seq 1 $IDS_LB_PROC`; do
+			if [ ! -f /etc/nsm/$SENSOR/snort_agent-$i.conf ]; then
+				cp /etc/nsm/$SENSOR/snort_agent.conf /etc/nsm/$SENSOR/snort_agent-$i.conf	
+				sed -i 's|^set HOSTNAME.*$|set HOSTNAME $SENSOR-$i|g' /etc/nsm/$SENSOR/snort_agent-$i.conf
+				OLD_PORT=`grep BY_PORT /etc/nsm/$SENSOR/snort_agent-$i.conf |awk '{print $3}'`
+				let NEW_PORT=OLD_PORT+$i
+				sed -i 's|^set BY_PORT.*$|set BY_PORT $NEW_PORT|g' /etc/nsm/$SENSOR/snort_agent-$i.conf
+				sed -i 's|snort.stats|snort-$i.stats|g' /etc/nsm/$SENSOR/snort_agent-$i.conf
+			fi
+				[ -z "$SKIP_SNORT_AGENT" ] && process_start "snort_agent.tcl" "-c /etc/nsm/$SENSOR/snort_agent-$i.conf" "$PROCESS_PID_DIR/$SENSOR/snort_agent-$i.pid" "$PROCESS_LOG_DIR/$SENSOR/snort_agent-$i.log" "snort_agent (sguil)"
+		done
+	fi
+
 	TODAY=$(date $DATE_OPTIONS "+%Y-%m-%d")      #-u option sets TZ to GMT
 
 	# UTC specific options
-	if [ "$SENSOR_UTC" == "Y" ]
-	then 
+	if [ "$SENSOR_UTC" == "Y" ]; then
 		SNORT_OPTIONS="-U ${SNORT_OPTIONS}"
 		BARNYARD2_OPTIONS="-U ${BARNYARD2_OPTIONS}"
 		DATE_OPTIONS="-u"
@@ -350,24 +368,54 @@ do
 
 	# grab any early snort specific requirements
 	is_snort_version "2.8.4.1-"
-	if [ ${?} -eq 0 ]
-	then
+	if [ ${?} -eq 0 ]; then
 		SNORT_OPTIONS="${SNORT_OPTIONS} -o"
 	fi
 
 	# Start IDS Engine with unified2 output
-	# Determine whether to use Suricata or Snort (default)
 	if grep -i "suricata" /etc/nsm/securityonion.conf >/dev/null
 	then
-		# Start Suricata
+		# Start Suricata using afpacket with $IDS_LB_PROC processes
    		[ -z "$SKIP_SNORT_ALERT" ] && process_start "suricata" "--user $SENSOR_USER --group $SENSOR_GROUP -c /etc/nsm/$SENSOR/suricata.yaml --af-packet=$SENSOR_INTERFACE_SHORT --runmode=autofp -F /etc/nsm/$SENSOR/bpf.conf -l $SENSOR_LOG_DIR " "$PROCESS_PID_DIR/$SENSOR/suricata.pid" "$PROCESS_LOG_DIR/$SENSOR/suricata.log" "suricata (alert data)"
 		
 	else	
-		# Start Snort (default)
-   		[ -z "$SKIP_SNORT_ALERT" ] && process_start "snort" "-u $SENSOR_USER -g $SENSOR_GROUP -c $SNORT_CONFIG -i $SENSOR_INTERFACE_SHORT -F /etc/nsm/$SENSOR/bpf.conf -l $SENSOR_LOG_DIR $SNORT_OPTIONS" "$PROCESS_PID_DIR/$SENSOR/snortu.pid" "$PROCESS_LOG_DIR/$SENSOR/snortu.log" "snort (alert data)"
+		# Start $IDS_LB_PROC instances of Snort using pfring load-balancing
+		# it seems that pfring requires root, so let's remove user/group for now
+   		#[ -z "$SKIP_SNORT_ALERT" ] && process_start "snort" "-u $SENSOR_USER -g $SENSOR_GROUP -c $SNORT_CONFIG -i $SENSOR_INTERFACE_SHORT -F /etc/nsm/$SENSOR/bpf.conf -l $SENSOR_LOG_DIR $SNORT_OPTIONS" "$PROCESS_PID_DIR/$SENSOR/snortu.pid" "$PROCESS_LOG_DIR/$SENSOR/snortu.log" "snort (alert data)"
+		for i in `seq 1 $IDS_LB_PROC`; do
+			if [ ! -f /etc/nsm/$SENSOR/snort-$i.conf ]; then
+				cp /etc/nsm/$SENSOR/snort.conf /etc/nsm/$SENSOR/snort-$i.conf	
+				sed -i 's|snort.stats|snort-$i.stats|g' /etc/nsm/$SENSOR/snort-$i.conf
+			fi
+			PID=$PROCESS_PID_DIR/$SENSOR/snortu-$i.pid
+			LOG=$PROCESS_LOG_DIR/$SENSOR/snortu-$i.log
+			UNI_DIR=$SENSOR_LOG_DIR-$i
+   			[ -z "$SKIP_SNORT_ALERT" ] && process_start "snort" "-c /etc/nsm/$SENSOR/snort-$i.conf -i $SENSOR_INTERFACE_SHORT -F /etc/nsm/$SENSOR/bpf.conf -l $UNI_DIR $SNORT_OPTIONS" "$PID" "$LOG" "snort (alert data)"
+		done
 	fi
+
 	# start barnyard2
-	[ -z "$SKIP_BARNYARD2" ] && process_start "barnyard2" "-c $BARNYARD2_CONFIG -d $SENSOR_LOG_DIR -f snort.unified2 -w $BARNYARD2_WALDO $BARNYARD2_OPTIONS" "$PROCESS_PID_DIR/$SENSOR/barnyard2.pid" "$PROCESS_LOG_DIR/$SENSOR/barnyard2.log" "barnyard2 (spooler, unified2 format)"
+	# If running Suricata, we only need a single instance of barnyard2.
+	# If running Snort with pfring load-balancing, we need one instance of barnyard2 per Snort instance.
+	if grep -i "suricata" /etc/nsm/securityonion.conf >/dev/null
+	then
+		# we only need a single instance of barnyard2
+		[ -z "$SKIP_BARNYARD2" ] && process_start "barnyard2" "-c $BARNYARD2_CONFIG -d $SENSOR_LOG_DIR -f snort.unified2 -w $BARNYARD2_WALDO -i 1 $BARNYARD2_OPTIONS" "$PROCESS_PID_DIR/$SENSOR/barnyard2.pid" "$PROCESS_LOG_DIR/$SENSOR/barnyard2.log" "barnyard2 (spooler, unified2 format)"
+	else
+		# we need one instance of barnyard2 per Snort instance
+		for i in `seq 1 $IDS_LB_PROC`; do
+			if [ ! -f /etc/nsm/$SENSOR/barnyard-$i.conf ]; then
+				cp /etc/nsm/$SENSOR/barnyard.conf /etc/nsm/$SENSOR/barnyard-$i.conf	
+				PORT=`grep BY_PORT /etc/nsm/$SENSOR/snort_agent-$i.conf |awk '{print $3}'`
+				sed -i 's|^output sguil: sensor_name=so-ags-eth1 agent_port=.*$|output sguil: sensor_name=so-ags-eth1 agent_port=$PORT|g' /etc/nsm/$SENSOR/barnyard-$i.conf
+			fi
+			UNI_DIR=$SENSOR_LOG_DIR-$i	
+			WALDO=$BARNYARD2_WALDO-$i
+			PID=$PROCESS_PID_DIR/$SENSOR/barnyard2-$i.pid
+			LOG=$PROCESS_LOG_DIR/$SENSOR/barnyard2-$i.log
+			[ -z "$SKIP_BARNYARD2" ] && process_start "barnyard2" "-c /etc/nsm/$SENSOR/barnyard-$i.conf -d $UNI_DIR -f snort.unified2 -w $WALDO -i $i $BARNYARD2_OPTIONS" "$PID" "$LOG" "barnyard2 (spooler, unified2 format)"
+		done
+	fi
 
 	# start sancp
 	[ -z "$SKIP_SANCP" ] && process_start "sancp" "-d $SENSOR_LOG_DIR/sancp -i $SENSOR_INTERFACE_SHORT -c $SANCP_CONFIG -u $SENSOR_USER -g $SENSOR_GROUP $SANCP_OPTIONS" "$PROCESS_PID_DIR/$SENSOR/sancp.pid" "$PROCESS_LOG_DIR/$SENSOR/sancp.log" "sancp (session data)"
@@ -419,6 +467,6 @@ fi
 
 if [ -z "$SKIP_BRO" ] && grep -v "^#" /etc/nsm/sensortab>/dev/null ; then
 	echo_msg 0 "Starting: Bro"
-	sudo -u sguil /opt/bro/bin/broctl start
+	/opt/bro/bin/broctl start
 fi
 
--- securityonion-nsmnow-admin-scripts-20120724.orig/usr/sbin/nsm_sensor_ps-status
+++ securityonion-nsmnow-admin-scripts-20120724/usr/sbin/nsm_sensor_ps-status
@@ -332,11 +332,21 @@ do
 	then
 		[ -z "$SKIP_SNORT_ALERT" ] && process_status "suricata" "$PROCESS_PID_DIR/$SENSOR/suricata.pid" "suricata (alert data)"
 	else
-		[ -z "$SKIP_SNORT_ALERT" ] && process_status "snort" "$PROCESS_PID_DIR/$SENSOR/snortu.pid" "snort (alert data)"
+                for i in `seq 1 $IDS_LB_PROC`; do
+			[ -z "$SKIP_SNORT_ALERT" ] && process_status "snort" "$PROCESS_PID_DIR/$SENSOR/snortu-$i.pid" "snort (alert data)"
+		done
 	fi
 
 	# status barnyard2
-	[ -z "$SKIP_BARNYARD2" ] && process_status "barnyard2" "$PROCESS_PID_DIR/$SENSOR/barnyard2.pid" "barnyard2 (spooler, unified2 format)"
+        if grep -i "suricata" /etc/nsm/securityonion.conf >/dev/null
+	then
+		[ -z "$SKIP_BARNYARD2" ] && process_status "barnyard2" "$PROCESS_PID_DIR/$SENSOR/barnyard2.pid" "barnyard2 (spooler, unified2 format)"
+	else
+                for i in `seq 1 $IDS_LB_PROC`; do
+			[ -z "$SKIP_BARNYARD2" ] && process_status "barnyard2" "$PROCESS_PID_DIR/$SENSOR/barnyard2-$i.pid" "barnyard2 (spooler, unified2 format)"
+		done
+	fi
+
 
 	# status sancp
 	[ -z "$SKIP_SANCP" ] && process_status "sancp" "$PROCESS_PID_DIR/$SENSOR/sancp.pid" "sancp (session data)"
@@ -363,6 +373,6 @@ fi
 
 if [ -z "$SKIP_BRO" ] && grep -v "^#" /etc/nsm/sensortab>/dev/null ; then
         echo_msg 0 "Status: Bro"
-        sudo -u sguil /opt/bro/bin/broctl status
+        /opt/bro/bin/broctl status
 fi
 
--- securityonion-nsmnow-admin-scripts-20120724.orig/usr/sbin/nsm_sensor_ps-restart
+++ securityonion-nsmnow-admin-scripts-20120724/usr/sbin/nsm_sensor_ps-restart
@@ -362,13 +362,37 @@ do
 	# restart the IDS engine
         if grep -i "suricata" /etc/nsm/securityonion.conf >/dev/null
 	then
+		# Restart Suricata using afpacket with $IDS_LB_PROC processes
    		[ -z "$SKIP_SNORT_ALERT" ] && $ACTION "suricata" "--user $SENSOR_USER --group $SENSOR_GROUP -c /etc/nsm/$SENSOR/suricata.yaml --af-packet=$SENSOR_INTERFACE_SHORT --runmode=autofp -F /etc/nsm/$SENSOR/bpf.conf -l $SENSOR_LOG_DIR" "$PROCESS_PID_DIR/$SENSOR/suricata.pid" "$PROCESS_LOG_DIR/$SENSOR/suricata.log" "suricata (alert data)"
 	else
-   		[ -z "$SKIP_SNORT_ALERT" ] && $ACTION "snort" "-u $SENSOR_USER -g $SENSOR_GROUP -c $SNORT_CONFIG -i $SENSOR_INTERFACE_SHORT -F /etc/nsm/$SENSOR/bpf.conf -l $SENSOR_LOG_DIR $SNORT_OPTIONS" "$PROCESS_PID_DIR/$SENSOR/snortu.pid" "$PROCESS_LOG_DIR/$SENSOR/snortu.log" "snort (alert data)"
+                # Restart $IDS_LB_PROC instances of Snort using pfring load-balancing
+		# It seems that pfring requires root, so let's remove user/group for now
+   		#[ -z "$SKIP_SNORT_ALERT" ] && $ACTION "snort" "-u $SENSOR_USER -g $SENSOR_GROUP -c $SNORT_CONFIG -i $SENSOR_INTERFACE_SHORT -F /etc/nsm/$SENSOR/bpf.conf -l $SENSOR_LOG_DIR $SNORT_OPTIONS" "$PROCESS_PID_DIR/$SENSOR/snortu.pid" "$PROCESS_LOG_DIR/$SENSOR/snortu.log" "snort (alert data)"
+		for i in `seq 1 $IDS_LB_PROC`; do
+                        PID=$PROCESS_PID_DIR/$SENSOR/snortu-$i.pid
+                        LOG=$PROCESS_LOG_DIR/$SENSOR/snortu-$i.log
+                        UNI_DIR=$SENSOR_LOG_DIR-$i
+	   		[ -z "$SKIP_SNORT_ALERT" ] && $ACTION "snort" "-c $SNORT_CONFIG -i $SENSOR_INTERFACE_SHORT -F /etc/nsm/$SENSOR/bpf.conf -l $UNI_DIR $SNORT_OPTIONS" "$PID" "$LOG" "snort (alert data)"
+		done
 	fi
 
 	# restart barnyard2
-	[ -z "$SKIP_BARNYARD2" ] && $ACTION "barnyard2" "-c $BARNYARD2_CONFIG -d $SENSOR_LOG_DIR -f snort.unified2 -w $BARNYARD2_WALDO $BARNYARD2_OPTIONS" "$PROCESS_PID_DIR/$SENSOR/barnyard2.pid" "$PROCESS_LOG_DIR/$SENSOR/barnyard2.log" "barnyard2 (spooler, unified2 format)"
+	# If running Suricata, we only have a single instance of barnyard2.
+        # If running Snort with pfring load-balancing, we have one instance of barnyard2 per Snort instance.
+        if grep -i "suricata" /etc/nsm/securityonion.conf >/dev/null
+        then
+                # we only have a single instance of barnyard2
+		[ -z "$SKIP_BARNYARD2" ] && $ACTION "barnyard2" "-c $BARNYARD2_CONFIG -d $SENSOR_LOG_DIR -f snort.unified2 -w $BARNYARD2_WALDO -i 1 $BARNYARD2_OPTIONS" "$PROCESS_PID_DIR/$SENSOR/barnyard2.pid" "$PROCESS_LOG_DIR/$SENSOR/barnyard2.log" "barnyard2 (spooler, unified2 format)"
+	else
+		# we have one instance of barnyard2 per Snort instance
+                for i in `seq 1 $IDS_LB_PROC`; do
+                        UNI_DIR=$SENSOR_LOG_DIR-$i
+                        WALDO=$BARNYARD2_WALDO-$i
+                        PID=$PROCESS_PID_DIR/$SENSOR/barnyard2-$i.pid
+                        LOG=$PROCESS_LOG_DIR/$SENSOR/barnyard2-$i.log
+			[ -z "$SKIP_BARNYARD2" ] && $ACTION "barnyard2" "-c $BARNYARD2_CONFIG -d $UNI_DIR -f snort.unified2 -w $WALDO -i $i $BARNYARD2_OPTIONS" "$PID" "$LOG" "barnyard2 (spooler, unified2 format)"
+		done
+	fi
 
 	# restart sancp
 	[ -z "$SKIP_SANCP" ] && $ACTION "sancp" "-d $SENSOR_LOG_DIR/sancp -i $SENSOR_INTERFACE_SHORT -c $SANCP_CONFIG -u $SENSOR_USER -g $SENSOR_GROUP $SANCP_OPTIONS" "$PROCESS_PID_DIR/$SENSOR/sancp.pid" "$PROCESS_LOG_DIR/$SENSOR/sancp.log" "sancp (session data)"
@@ -429,7 +453,7 @@ fi
 
 if [ -z "$SKIP_BRO" ] && [ "$ACTION" == "process_restart" ] && grep -v "^#" /etc/nsm/sensortab>/dev/null ; then
         echo_msg 0 "Restarting: Bro"
-        sudo -u sguil /opt/bro/bin/broctl stop
-        sudo -u sguil /opt/bro/bin/broctl start
+        /opt/bro/bin/broctl stop
+        /opt/bro/bin/broctl start
 fi
 
