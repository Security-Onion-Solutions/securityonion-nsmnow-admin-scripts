Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-nsmnow-admin-scripts (20120724-0ubuntu0securityonion178) xenial; urgency=medium
 .
   * issues 1291 1292 1176
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- /dev/null
+++ securityonion-nsmnow-admin-scripts-20120724/etc/cron.d/sensor-backup-config
@@ -0,0 +1,8 @@
+# /etc/cron.d/sensor-backup-config
+#
+# crontab entry to backup sensor config; purge backups older than 10 days
+DAYSTOKEEP=10
+SHELL=/bin/bash
+PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
+0 1 * * * root if [ -d /etc/nsm/backup ]; then :; else mkdir /etc/nsm/backup; fi; for i in $(cat /etc/nsm/sensortab | grep -v '#' | awk '{print $1}'); do /usr/sbin/nsm_sensor_backup-config --force-yes --sensor-name=$i --backup-file=/etc/nsm/backup/$i-sensor-backup-`date +\%Y-\%m-\%d`.tar.gz >> /var/log/nsm/$i-backup-config.log 2>&1; done; /usr/bin/find  /etc/nsm/backup/*sensor-backup*.tar.gz -mtime +$DAYSTOKEEP -exec rm -f {} \;
+
--- /dev/null
+++ securityonion-nsmnow-admin-scripts-20120724/etc/cron.d/server-backup-config
@@ -0,0 +1,8 @@
+# /etc/cron.d/server-backup-config
+#
+# crontab entry to backup server config; purge backups older than 10 days
+DAYSTOKEEP=10
+SHELL=/bin/sh
+PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
+0 1 * * * root if [ -d /etc/nsm/backup ]; then :; else mkdir /etc/nsm/backup; fi; /usr/sbin/nsm_server_backup-config --force-yes --server-name=securityonion --backup-file=/etc/nsm/backup/securityonion-server-backup-`date +\%Y-\%m-\%d`.tar.gz >> /var/log/nsm/server-backup-config.log 2>&1; /usr/bin/find  /etc/nsm/backup/*server-backup*.tar.gz -mtime +$DAYSTOKEEP -exec rm -f {} \;
+
--- securityonion-nsmnow-admin-scripts-20120724.orig/usr/lib/nsmnow/lib-nsm-common-utils
+++ securityonion-nsmnow-admin-scripts-20120724/usr/lib/nsmnow/lib-nsm-common-utils
@@ -1141,6 +1141,26 @@ process_restart_if_stale()
         APP_DESC=${5:-}
 	USER=${6:-}
 
+	# don't run while any other nsm_sensor_ps script is running
+        if [ $(pgrep -c nsm_sensor_ps) -gt 1 ]
+        then
+                echo_msg_begin 1 "waiting for other nsmnow process control script to stop"
+                sleep 1
+                loop=2
+                while [ $(pgrep -c nsm_sensor_ps) -gt 1 ]
+                do
+                        if [ $loop -ge 30 ]
+                        then
+                                echo_msg_end 1 "aborting after $loop checks"
+                                echo "nsm_sensor_ps process_restart_if_stale function call exited with error" 1>&2
+                                exit 1
+                        fi
+                        sleep 1
+                        loop=$((loop + 1))
+                done
+                echo_msg_end 2 "continuing after $loop checks"
+        fi
+
 	# check for PID file
         if [ -f $PID_FILE ]
         then
--- securityonion-nsmnow-admin-scripts-20120724.orig/usr/sbin/nsm_sensor_clear
+++ securityonion-nsmnow-admin-scripts-20120724/usr/sbin/nsm_sensor_clear
@@ -166,12 +166,14 @@ then
 	exit 1
 fi
 
-# prompt to clear the sensor
-prompt_user_yesno "Clear Sensor" "All collected data for sensor \"${SENSOR_NAME}\" will be cleared.\n\nDo you want to continue?" "N"
-[ "$?" -ne 0 ] && exit 1
-if [ "$PROMPT_RET" != "Y" -a "$PROMPT_RET" != "y" ]
-then
-	exit 1
+if [ "$FORCE_YES" != "yes" ]; then
+	# prompt to clear the sensor
+	prompt_user_yesno "Clear Sensor" "All collected data for sensor \"${SENSOR_NAME}\" will be cleared.\n\nDo you want to continue?" "N"
+	[ "$?" -ne 0 ] && exit 1
+	if [ "$PROMPT_RET" != "Y" -a "$PROMPT_RET" != "y" ]
+	then
+		exit 1
+	fi
 fi
 
 #
