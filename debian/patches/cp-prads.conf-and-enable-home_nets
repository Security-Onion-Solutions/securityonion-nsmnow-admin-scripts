Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-nsmnow-admin-scripts (20120724-0ubuntu0securityonion16) precise; urgency=low
 .
   * cp prads.conf and enable home_nets
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- securityonion-nsmnow-admin-scripts-20120724.orig/usr/sbin/nsm_sensor_ps-start
+++ securityonion-nsmnow-admin-scripts-20120724/usr/sbin/nsm_sensor_ps-start
@@ -424,13 +424,13 @@ do
 	#[ -z "$SKIP_SANCP" ] && process_start "sancp" "-d $SENSOR_LOG_DIR/sancp -i $SENSOR_INTERFACE_SHORT -c $SANCP_CONFIG -u $SENSOR_USER -g $SENSOR_GROUP $SANCP_OPTIONS" "$PROCESS_PID_DIR/$SENSOR/sancp.pid" "$PROCESS_LOG_DIR/$SENSOR/sancp.log" "sancp (session data)"
 
         # start prads
-	NOIP6="ip or (vlan and ip)"
-	if [ -s /etc/nsm/$SENSOR/bpf-prads.conf ]; then 
-		BPFfromfile=`cat /etc/nsm/$SENSOR/bpf-prads.conf`
-		BPF="($NOIP6) and ($BPFfromfile)"
-	else
-		BPF="$NOIP6"
-	fi
+        # If the user supplies a BPF, use theirs; otherwise, exclude IPv6
+        if [ -s /etc/nsm/$SENSOR/bpf-prads.conf ]; then
+                BPF=`cat /etc/nsm/$SENSOR/bpf-prads.conf`
+        else
+                # By default, we need to exclude IPv6 traffic from prads since Sguil doesn't grok it (yet)
+                BPF="ip or (vlan and ip)"
+        fi
         [ -z "$SKIP_PRADS" ] && process_start "prads" "-i $SENSOR_INTERFACE_SHORT -c /etc/nsm/$SENSOR/prads.conf -u $SENSOR_USER -g $SENSOR_GROUP -L /nsm/sensor_data/$SENSOR/sancp/ -f /nsm/sensor_data/$SENSOR/pads.fifo $PADS_OPTIONS -b \"$BPF\"" "$PROCESS_PID_DIR/$SENSOR/prads.pid" "$PROCESS_LOG_DIR/$SENSOR/prads.log" "prads (sessions/assets)"
 
 	# start pads_agent
--- securityonion-nsmnow-admin-scripts-20120724.orig/usr/sbin/nsm_sensor_edit
+++ securityonion-nsmnow-admin-scripts-20120724/usr/sbin/nsm_sensor_edit
@@ -102,7 +102,7 @@ NEW_SENSOR_LOG_DIR="/nsm/sensor_data"
 NEW_SNORT_OPTIONS="-m 112"
 NEW_SANCP_OPTIONS=""
 NEW_BARNYARD2_OPTIONS=""
- NEW_PADS_OPTIONS=""
+NEW_PADS_OPTIONS=""
 
 # extract necessary pre-check arguments from the commandline
 while [ "$#" -gt 0 ]
@@ -368,10 +368,6 @@ PADS_OPTIONS="${NEW_PADS_OPTIONS}"
 EOF_SENSOR
 
 THE_TIME=$(date)
-cat >/etc/nsm/$NEW_SENSOR_NAME/bpf.conf << EOF_BPF_CONF
-EOF_BPF_CONF
-
-THE_TIME=$(date)
 [ "${NEW_SENSOR_VLAN_TAGGING}" == "Y" ] && NEW_SENSOR_VLAN_TAGGING=1 || NEW_SENSOR_VLAN_TAGGING=0
 cat >/etc/nsm/$NEW_SENSOR_NAME/pcap_agent.conf << EOF_PCAP_AGENT
 # pcap_agent.conf: auto-generated by NSMnow Administration on $THE_TIME
@@ -512,7 +508,6 @@ set PADS_FIFO \${LOG_DIR}/\${HOSTNAME}/p
 set PING_DELAY 300000
 EOF_PADS_AGENT
 
-
 THE_TIME=$(date)
 cat >/etc/nsm/$NEW_SENSOR_NAME/barnyard2.conf << EOF_BARNYARD2
 # barnyard2.conf: auto-generated by NSMnow Administration on $THE_TIME
@@ -527,242 +522,6 @@ input unified2
 output sguil: sensor_name=$NEW_SENSOR_NAME agent_port=$NEW_SENSOR_BARNYARD2_PORT
 EOF_BARNYARD2
 
-THE_TIME=$(date)
-cat >/etc/nsm/$NEW_SENSOR_NAME/snort.conf << EOF_SNORT
-# snort.conf: auto-generated by NSMnow Administration on $THE_TIME
-var HOME_NET any
-var EXTERNAL_NET any
-var DNS_SERVERS \$HOME_NET
-var SMTP_SERVERS \$HOME_NET
-var HTTP_SERVERS \$HOME_NET
-var SQL_SERVERS \$HOME_NET
-var TELNET_SERVERS \$HOME_NET
-var SNMP_SERVERS \$HOME_NET
-portvar HTTP_PORTS 80
-portvar SHELLCODE_PORTS !80
-portvar ORACLE_PORTS 1521
-var AIM_SERVERS [64.12.24.0/23,64.12.28.0/23,64.12.161.0/24,64.12.163.0/24,64.12.200.0/24,205.188.3.0/24,205.188.5.0/24,205.188.7.0/24,205.188.9.0/24,205.188.153.0/24,205.188.179.0/24,205.188.248.0/24]
-var RULE_PATH ./rules
-var PREPROC_PATH ./preproc_rules
-config logdir: /nsm/sensor_data/$NEW_SENSOR_NAME
-dynamicpreprocessor directory $SNORT_LIB_DIR/snort_dynamicpreprocessor/
-dynamicengine $SNORT_LIB_DIR/snort_dynamicengine/libsf_engine.so
-preprocessor frag3_global: max_frags 65536
-preprocessor frag3_engine: policy first detect_anomalies
-preprocessor stream5_global: max_tcp 8192, track_tcp yes, track_udp no
-preprocessor stream5_tcp: policy first, use_static_footprint_sizes
-preprocessor perfmonitor: time 300 file /nsm/sensor_data/$NEW_SENSOR_NAME/snort.stats pktcnt 10000
-preprocessor http_inspect: global \\
-   iis_unicode_map unicode.map 1252
-preprocessor http_inspect_server: server default \\
-   profile all ports { 80 8080 8180 } oversize_dir_length 500
-preprocessor rpc_decode: 111 32771
-preprocessor bo
-preprocessor ftp_telnet: global \\
-   encrypted_traffic yes \\
-   inspection_type stateful
-preprocessor ftp_telnet_protocol: telnet \\
-   normalize \\
-   ayt_attack_thresh 200
-preprocessor ftp_telnet_protocol: ftp server default \\
-   def_max_param_len 100 \\
-   alt_max_param_len 200 { CWD } \\
-   cmd_validity MODE < char ASBCZ > \\
-   cmd_validity MDTM < [ date nnnnnnnnnnnnnn[.n[n[n]]] ] string > \\
-   chk_str_fmt { USER PASS RNFR RNTO SITE MKD } \\
-   telnet_cmds yes \\
-   data_chan
-preprocessor ftp_telnet_protocol: ftp client default \\
-   max_resp_len 256 \\
-   bounce yes \\
-   telnet_cmds yes
-preprocessor smtp: \\
-  ports { 25 587 691 } \\
-  inspection_type stateful \\
-  normalize cmds \\
-  normalize_cmds { EXPN VRFY RCPT } \\
-  alt_max_command_line_len 260 { MAIL } \\
-  alt_max_command_line_len 300 { RCPT } \\
-  alt_max_command_line_len 500 { HELP HELO ETRN } \\
-  alt_max_command_line_len 255 { EXPN VRFY }
-preprocessor sfportscan: proto  { all } \\
-                         memcap { 10000000 } \\
-                         sense_level { low }
-preprocessor dcerpc: \\
-    autodetect \\
-    max_frag_size 3000 \\
-    memcap 100000
-preprocessor dns: \\
-    ports { 53 } \\
-    enable_rdata_overflow
-preprocessor ssl: noinspect_encrypted
-output unified2: filename snort.unified2, limit 128
-include classification.config
-include reference.config
-include \$RULE_PATH/local.rules
-include \$RULE_PATH/bad-traffic.rules
-include \$RULE_PATH/exploit.rules
-include \$RULE_PATH/scan.rules
-include \$RULE_PATH/finger.rules
-include \$RULE_PATH/ftp.rules
-include \$RULE_PATH/telnet.rules
-include \$RULE_PATH/rpc.rules
-include \$RULE_PATH/rservices.rules
-include \$RULE_PATH/dos.rules
-include \$RULE_PATH/ddos.rules
-include \$RULE_PATH/dns.rules
-include \$RULE_PATH/tftp.rules
-include \$RULE_PATH/web-cgi.rules
-include \$RULE_PATH/web-coldfusion.rules
-include \$RULE_PATH/web-iis.rules
-include \$RULE_PATH/web-frontpage.rules
-include \$RULE_PATH/web-client.rules
-include \$RULE_PATH/web-php.rules
-include \$RULE_PATH/sql.rules
-include \$RULE_PATH/x11.rules
-include \$RULE_PATH/icmp.rules
-include \$RULE_PATH/netbios.rules
-include \$RULE_PATH/misc.rules
-include \$RULE_PATH/attack-responses.rules
-include \$RULE_PATH/oracle.rules
-include \$RULE_PATH/mysql.rules
-include \$RULE_PATH/snmp.rules
-include \$RULE_PATH/smtp.rules
-include \$RULE_PATH/imap.rules
-include \$RULE_PATH/pop2.rules
-include \$RULE_PATH/pop3.rules
-include \$RULE_PATH/nntp.rules
-include \$RULE_PATH/other-ids.rules
-include \$RULE_PATH/icmp-info.rules
-include \$RULE_PATH/experimental.rules
-EOF_SNORT
-
-THE_TIME=$(date)
-cat >/etc/nsm/$NEW_SENSOR_NAME/pads.conf << EOF_PADS
-# pads.conf: auto-generated by NSMnow Administration on $THE_TIME
-# ------------------------------------------------------------------------------
-#
-# pads.conf
-#
-# Matt Shelton <matt@mattshelton.com>
-#
-# This file contains configuration parameters for the PADS application.  Please
-# visit http://passive.sourceforge.net for further information.
-#
-# $Id: pads.conf,v 1.3 2005/11/06 16:09:54 dgil-guest Exp $
-#
-# ------------------------------------------------------------------------------
-
-# daemon
-# -------------------------
-# This parameter determines whether the application will go into the background.
-# 0 = Disable, 1 = Enable
-daemon 0
-
-# pid_file
-# -------------------------
-# Filename of the pads PID file.  This value should be set if you are planning
-# on using daemon mode.
-#pid_file /var/run/pads.pid
-
-# sig_file
-# -------------------------
-# Alternate location for the pads-signature-list file.
-#sig_file /usr/pads/share/pads/pads-signature-list
-sig_file /etc/pads/pads-signature-list
-
-# mac_file
-# -------------------------
-# Alternate location for the pads-ether-codes file.
-#mac_file /usr/pads/share/pads/pads-ether-codes
-mac_file /etc/pads/pads-ether-codes
-
-# user
-# -------------------------
-# This is the name of the user pads-archiver will run as when started as root.
-#user pads
-
-# group
-# -------------------------
-# This is the name of the group pads-archiver will run as when started as root.
-#group pads
-
-# interface
-# -------------------------
-# This contains the name of the interface PADS will listen to.
-interface $NEW_SENSOR_INTERFACE
-
-# filter
-# -------------------------
-# This value contains a libpcap filter to be applied to the PADS session.
-#filter port 22
-
-# network
-# -------------------------
-# This string contains a comma seperated list of networks to be monitored.
-#network 192.168.0.0/24,192.168.1.0/24,10.10.10.0/24
-
-# output:  screen
-# -------------------------
-# This output plugin displays PADS data to the screen.  It is mainly used for
-# debugging purposes.
-#output screen
-
-# output:  csv
-# -------------------------
-# This output plugin writes PADS data to a CSV file.  Optionally, a CSV filename
-# can be specified as an argument.
-#output csv: /var/lib/pads/assets.csv
-
-# output:  fifo
-# -------------------------
-# This output plugin writes PADS data to a FIFO file.  Optionally, a FIFO
-# filename can be specified as an argument.
-output fifo: $NEW_SENSOR_LOG_DIR/pads.fifo
-EOF_PADS
-
-THE_TIME=$(date)
-cat >/etc/nsm/$NEW_SENSOR_NAME/sancp.conf << EOF_SANCP
-# sancp.conf: auto-generated by NSMnow Administration on $THE_TIME 
-# Currently, sguil only supports the 'stats' output and we want it in timestamped fields
-default stats tsfilename stats
-# Time in seconds we write a new file if expired cnxs are available
-default flush_interval=30
-# This tells sancp to open new file handle, write, and close in one step
-default burst_mode=enable
-# Default timeout: how many secs to wait after the last packet till we consider the cnx closed
-default timeout=120
-# Conforms with out sguil sancp table schema
-format stats sancp_id,start_time_gmt,stop_time_gmt,duration,ip_proto,src_ip_decimal,src_port,dst_ip_decimal,dst_port,src_pkts,src_bytes,dst_pkts,dst_bytes,sflags,dflags
-# From here on you define what stats/cnxs/sessions/flows (whatever you want to call it) get logged.
-# Please read the sancp documention for more information.
-# Most of the below are examples of setting variables for complex rules
-var ip 8                # ether proto 0x0800  # ip traffic
-# define some ip protocols
-var icmp 1
-var tcp 6
-var udp 17
-# define some tcp protocols
-var http 80
-var https 443
-var smtp 25
-var dns 53
-var HOME_NET 67.11.255.148
-#var WWW_NET 192.168.1.0/24
-#var MAIL_SERVER 192.168.1.2
-#var MAIL_SERVER2 192.168.1.3
-# Default output logging for each connection
-# We don't use realtime or pcap logging at this point so we pass them
-default realtime=pass
-default pcap=pass
-# Here is where our rules start. We log all stats by default so this is defining exceptions.
-# first six fields are required before rule options can be used
-#     eth_proto src_ip dst_ip ip_proto src_port dst_port
-# Here is an example if ignoring outbound HTTP stats
-#ip HOME_NET any tcp any http, stats pass
-#ip HOME_NET any tcp any https, stats pass
-EOF_SANCP
-
 # udpate sensortab (remove old and add the new)
 sensortab_entry_del $SENSOR_NAME
 if [ "$?" -ne 0 ]
--- securityonion-nsmnow-admin-scripts-20120724.orig/usr/sbin/nsm_sensor_ps-restart
+++ securityonion-nsmnow-admin-scripts-20120724/usr/sbin/nsm_sensor_ps-restart
@@ -406,12 +406,12 @@ do
 	#[ -z "$SKIP_SANCP" ] && $ACTION "sancp" "-d $SENSOR_LOG_DIR/sancp -i $SENSOR_INTERFACE_SHORT -c $SANCP_CONFIG -u $SENSOR_USER -g $SENSOR_GROUP $SANCP_OPTIONS" "$PROCESS_PID_DIR/$SENSOR/sancp.pid" "$PROCESS_LOG_DIR/$SENSOR/sancp.log" "sancp (session data)"
 
 	# restart prads
-	NOIP6="ip or (vlan and ip)"
-	if [ -s /etc/nsm/$SENSOR/bpf-prads.conf ]; then 
-		BPFfromfile=`cat /etc/nsm/$SENSOR/bpf-prads.conf`
-		BPF="($NOIP6) and ($BPFfromfile)"
+	# If the user supplies a BPF, use theirs; otherwise, exclude IPv6
+        if [ -s /etc/nsm/$SENSOR/bpf-prads.conf ]; then
+                BPF=`cat /etc/nsm/$SENSOR/bpf-prads.conf`
 	else
-		BPF="$NOIP6"
+		# By default, we need to exclude IPv6 traffic from prads since Sguil doesn't grok it (yet)
+		BPF="ip or (vlan and ip)"
 	fi
 	[ -z "$SKIP_PRADS" ] && $ACTION "prads" "-i $SENSOR_INTERFACE_SHORT -c /etc/nsm/$SENSOR/prads.conf -u $SENSOR_USER -g $SENSOR_GROUP -L /nsm/sensor_data/$SENSOR/sancp/ -f /nsm/sensor_data/$SENSOR/pads.fifo $PADS_OPTIONS -b \"$BPF\"" "$PROCESS_PID_DIR/$SENSOR/prads.pid" "$PROCESS_LOG_DIR/$SENSOR/prads.log" "prads (sessions/assets)"
 
--- securityonion-nsmnow-admin-scripts-20120724.orig/usr/sbin/nsm_sensor_add
+++ securityonion-nsmnow-admin-scripts-20120724/usr/sbin/nsm_sensor_add
@@ -106,7 +106,7 @@ SENSOR_CONF_DIR="/etc/nsm"
 SNORT_OPTIONS="-m 112"
 SANCP_OPTIONS=""
 BARNYARD2_OPTIONS=""
- PADS_OPTIONS=""
+PADS_OPTIONS=""
 
 # extract necessary pre-check arguments from the commandline
 while [ "$#" -gt 0 ]
@@ -319,6 +319,11 @@ fi
 # the only thing that exists in /usr/share/nsmnow/templates/snort/ now is an old rules directory which we don't need
 #cp -a /usr/share/nsmnow/templates/snort/* /etc/nsm/$SENSOR_NAME
 
+# copy prads.conf into place
+cp /etc/nsm/templates/prads/prads.conf /etc/nsm/$SENSOR_NAME
+# set home_nets to RFC1918
+sed -i 's|# home_nets=192.168.0.0/16,10.0.0.0/255.0.0.0,172.16.0.0/255.240.0.0|home_nets=192.168.0.0/16,10.0.0.0/255.0.0.0,172.16.0.0/255.240.0.0|g' /etc/nsm/$SENSOR_NAME/prads.conf
+
 # build the configuration files
 THE_TIME=$(date)
 cat >/etc/nsm/$SENSOR_NAME/sensor.conf << EOF_SENSOR
@@ -356,10 +361,6 @@ PADS_OPTIONS="${PADS_OPTIONS}"
 EOF_SENSOR
 
 THE_TIME=$(date)
-cat >/etc/nsm/$SENSOR_NAME/bpf.conf << EOF_BPF_CONF
-EOF_BPF_CONF
-
-THE_TIME=$(date)
 [ "${SENSOR_VLAN_TAGGING}" == "Y" ] && SENSOR_VLAN_TAGGING=1 || SENSOR_VLAN_TAGGING=0
 cat >/etc/nsm/$SENSOR_NAME/pcap_agent.conf << EOF_PCAP_AGENT
 # pcap_agent.conf: auto-generated by NSMnow Administration on $THE_TIME
@@ -567,242 +568,6 @@ output sguil: sensor_name=$SENSOR_NAME a
 output database: alert, mysql, user=root dbname=snorby host=127.0.0.1
 EOF_BARNYARD2
 
-THE_TIME=$(date)
-cat >/etc/nsm/$SENSOR_NAME/snort.conf << EOF_SNORT
-# snort.conf: auto-generated by NSMnow Administration on $THE_TIME
-var HOME_NET any
-var EXTERNAL_NET any
-var DNS_SERVERS \$HOME_NET
-var SMTP_SERVERS \$HOME_NET
-var HTTP_SERVERS \$HOME_NET
-var SQL_SERVERS \$HOME_NET
-var TELNET_SERVERS \$HOME_NET
-var SNMP_SERVERS \$HOME_NET
-portvar HTTP_PORTS 80
-portvar SHELLCODE_PORTS !80
-portvar ORACLE_PORTS 1521
-var AIM_SERVERS [64.12.24.0/23,64.12.28.0/23,64.12.161.0/24,64.12.163.0/24,64.12.200.0/24,205.188.3.0/24,205.188.5.0/24,205.188.7.0/24,205.188.9.0/24,205.188.153.0/24,205.188.179.0/24,205.188.248.0/24]
-var RULE_PATH ./rules
-var PREPROC_PATH ./preproc_rules
-config logdir: /nsm/sensor_data/$SENSOR_NAME
-dynamicpreprocessor directory $SNORT_LIB_DIR/snort_dynamicpreprocessor/
-dynamicengine $SNORT_LIB_DIR/snort_dynamicengine/libsf_engine.so
-preprocessor frag3_global: max_frags 65536
-preprocessor frag3_engine: policy first detect_anomalies
-preprocessor stream5_global: max_tcp 8192, track_tcp yes, track_udp no
-preprocessor stream5_tcp: policy first, use_static_footprint_sizes
-preprocessor perfmonitor: time 300 file /nsm/sensor_data/$SENSOR_NAME/snort.stats pktcnt 10000
-preprocessor http_inspect: global \\
-   iis_unicode_map unicode.map 1252
-preprocessor http_inspect_server: server default \\
-   profile all ports { 80 8080 8180 } oversize_dir_length 500
-preprocessor rpc_decode: 111 32771
-preprocessor bo
-preprocessor ftp_telnet: global \\
-   encrypted_traffic yes \\
-   inspection_type stateful
-preprocessor ftp_telnet_protocol: telnet \\
-   normalize \\
-   ayt_attack_thresh 200
-preprocessor ftp_telnet_protocol: ftp server default \\
-   def_max_param_len 100 \\
-   alt_max_param_len 200 { CWD } \\
-   cmd_validity MODE < char ASBCZ > \\
-   cmd_validity MDTM < [ date nnnnnnnnnnnnnn[.n[n[n]]] ] string > \\
-   chk_str_fmt { USER PASS RNFR RNTO SITE MKD } \\
-   telnet_cmds yes \\
-   data_chan
-preprocessor ftp_telnet_protocol: ftp client default \\
-   max_resp_len 256 \\
-   bounce yes \\
-   telnet_cmds yes
-preprocessor smtp: \\
-  ports { 25 587 691 } \\
-  inspection_type stateful \\
-  normalize cmds \\
-  normalize_cmds { EXPN VRFY RCPT } \\
-  alt_max_command_line_len 260 { MAIL } \\
-  alt_max_command_line_len 300 { RCPT } \\
-  alt_max_command_line_len 500 { HELP HELO ETRN } \\
-  alt_max_command_line_len 255 { EXPN VRFY }
-preprocessor sfportscan: proto  { all } \\
-                         memcap { 10000000 } \\
-                         sense_level { low }
-preprocessor dcerpc: \\
-    autodetect \\
-    max_frag_size 3000 \\
-    memcap 100000
-preprocessor dns: \\
-    ports { 53 } \\
-    enable_rdata_overflow
-preprocessor ssl: noinspect_encrypted
-output unified2: filename snort.unified2, limit 128
-include classification.config
-include reference.config
-include \$RULE_PATH/local.rules
-include \$RULE_PATH/bad-traffic.rules
-include \$RULE_PATH/exploit.rules
-include \$RULE_PATH/scan.rules
-include \$RULE_PATH/finger.rules
-include \$RULE_PATH/ftp.rules
-include \$RULE_PATH/telnet.rules
-include \$RULE_PATH/rpc.rules
-include \$RULE_PATH/rservices.rules
-include \$RULE_PATH/dos.rules
-include \$RULE_PATH/ddos.rules
-include \$RULE_PATH/dns.rules
-include \$RULE_PATH/tftp.rules
-include \$RULE_PATH/web-cgi.rules
-include \$RULE_PATH/web-coldfusion.rules
-include \$RULE_PATH/web-iis.rules
-include \$RULE_PATH/web-frontpage.rules
-include \$RULE_PATH/web-client.rules
-include \$RULE_PATH/web-php.rules
-include \$RULE_PATH/sql.rules
-include \$RULE_PATH/x11.rules
-include \$RULE_PATH/icmp.rules
-include \$RULE_PATH/netbios.rules
-include \$RULE_PATH/misc.rules
-include \$RULE_PATH/attack-responses.rules
-include \$RULE_PATH/oracle.rules
-include \$RULE_PATH/mysql.rules
-include \$RULE_PATH/snmp.rules
-include \$RULE_PATH/smtp.rules
-include \$RULE_PATH/imap.rules
-include \$RULE_PATH/pop2.rules
-include \$RULE_PATH/pop3.rules
-include \$RULE_PATH/nntp.rules
-include \$RULE_PATH/other-ids.rules
-include \$RULE_PATH/icmp-info.rules
-include \$RULE_PATH/experimental.rules
-EOF_SNORT
-
-THE_TIME=$(date)
-cat >/etc/nsm/$SENSOR_NAME/pads.conf << EOF_PADS
-# pads.conf: auto-generated by NSMnow Administration on $THE_TIME
-# ------------------------------------------------------------------------------
-#
-# pads.conf
-#
-# Matt Shelton <matt@mattshelton.com>
-#
-# This file contains configuration parameters for the PADS application.  Please
-# visit http://passive.sourceforge.net for further information.
-#
-# $Id: pads.conf,v 1.3 2005/11/06 16:09:54 dgil-guest Exp $
-#
-# ------------------------------------------------------------------------------
-
-# daemon
-# -------------------------
-# This parameter determines whether the application will go into the background.
-# 0 = Disable, 1 = Enable
-daemon 0
-
-# pid_file
-# -------------------------
-# Filename of the pads PID file.  This value should be set if you are planning
-# on using daemon mode.
-#pid_file /var/run/pads.pid
-
-# sig_file
-# -------------------------
-# Alternate location for the pads-signature-list file.
-#sig_file /usr/pads/share/pads/pads-signature-list
-sig_file /etc/pads/pads-signature-list
-
-# mac_file
-# -------------------------
-# Alternate location for the pads-ether-codes file.
-#mac_file /usr/pads/share/pads/pads-ether-codes
-mac_file /etc/pads/pads-ether-codes
-
-# user
-# -------------------------
-# This is the name of the user pads-archiver will run as when started as root.
-#user pads
-
-# group
-# -------------------------
-# This is the name of the group pads-archiver will run as when started as root.
-#group pads
-
-# interface
-# -------------------------
-# This contains the name of the interface PADS will listen to.
-interface $SENSOR_INTERFACE
-
-# filter
-# -------------------------
-# This value contains a libpcap filter to be applied to the PADS session.
-#filter port 22
-
-# network
-# -------------------------
-# This string contains a comma seperated list of networks to be monitored.
-network 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12
-
-# output:  screen
-# -------------------------
-# This output plugin displays PADS data to the screen.  It is mainly used for
-# debugging purposes.
-#output screen
-
-# output:  csv
-# -------------------------
-# This output plugin writes PADS data to a CSV file.  Optionally, a CSV filename
-# can be specified as an argument.
-#output csv: /var/lib/pads/assets.csv
-
-# output:  fifo
-# -------------------------
-# This output plugin writes PADS data to a FIFO file.  Optionally, a FIFO
-# filename can be specified as an argument.
-output fifo: $SENSOR_LOG_DIR/pads.fifo
-EOF_PADS
-
-THE_TIME=$(date)
-cat >/etc/nsm/$SENSOR_NAME/sancp.conf << EOF_SANCP
-# sancp.conf: auto-generated by NSMnow Administration on $THE_TIME 
-# Currently, sguil only supports the 'stats' output and we want it in timestamped fields
-default stats tsfilename stats
-# Time in seconds we write a new file if expired cnxs are available
-default flush_interval=30
-# This tells sancp to open new file handle, write, and close in one step
-default burst_mode=enable
-# Default timeout: how many secs to wait after the last packet till we consider the cnx closed
-default timeout=120
-# Conforms with out sguil sancp table schema
-format stats sancp_id,start_time_gmt,stop_time_gmt,duration,ip_proto,src_ip_decimal,src_port,dst_ip_decimal,dst_port,src_pkts,src_bytes,dst_pkts,dst_bytes,sflags,dflags
-# From here on you define what stats/cnxs/sessions/flows (whatever you want to call it) get logged.
-# Please read the sancp documention for more information.
-# Most of the below are examples of setting variables for complex rules
-var ip 8                # ether proto 0x0800  # ip traffic
-# define some ip protocols
-var icmp 1
-var tcp 6
-var udp 17
-# define some tcp protocols
-var http 80
-var https 443
-var smtp 25
-var dns 53
-var HOME_NET 67.11.255.148
-#var WWW_NET 192.168.1.0/24
-#var MAIL_SERVER 192.168.1.2
-#var MAIL_SERVER2 192.168.1.3
-# Default output logging for each connection
-# We don't use realtime or pcap logging at this point so we pass them
-default realtime=pass
-default pcap=pass
-# Here is where our rules start. We log all stats by default so this is defining exceptions.
-# first six fields are required before rule options can be used
-#     eth_proto src_ip dst_ip ip_proto src_port dst_port
-# Here is an example if ignoring outbound HTTP stats
-#ip HOME_NET any tcp any http, stats pass
-#ip HOME_NET any tcp any https, stats pass
-EOF_SANCP
-
 # with all files created, enforce certain permissions
 check_usergroup "${SENSOR_USER}" "${SENSOR_GROUP}"
 if [ "$?" -ne "0" ]
