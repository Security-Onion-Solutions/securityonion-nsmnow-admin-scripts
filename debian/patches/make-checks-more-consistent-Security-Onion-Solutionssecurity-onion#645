Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-nsmnow-admin-scripts (20120724-0ubuntu0securityonion207) xenial; urgency=medium
 .
   * make checks more consistent Security-Onion-Solutions/security-onion#645
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- securityonion-nsmnow-admin-scripts-20120724.orig/usr/sbin/nsm_sensor_ps-restart
+++ securityonion-nsmnow-admin-scripts-20120724/usr/sbin/nsm_sensor_ps-restart
@@ -295,10 +295,14 @@ then
 	SENSOR_NAME=$(sensortab_names_get_on_auto "1")
 fi
 
-# see if any sensors are disabled
-for i in $SENSOR_NAME; do
-	if grep -q "#$i" /etc/nsm/sensortab; then
-		echo "$i disabled, exiting."
+# see if any sensors are disabled or nonexistent
+for SENSOR in $SENSOR_NAME; do
+	if grep -q -P "#$SENSOR\t" /etc/nsm/sensortab; then
+		echo "$SENSOR disabled, exiting."
+		exit 1
+	fi
+	if ! grep -q -P "$SENSOR\t" /etc/nsm/sensortab; then
+		echo "$SENSOR not found, exiting."
 		exit 1
 	fi
 done
--- securityonion-nsmnow-admin-scripts-20120724.orig/usr/sbin/nsm_sensor_ps-start
+++ securityonion-nsmnow-admin-scripts-20120724/usr/sbin/nsm_sensor_ps-start
@@ -292,10 +292,14 @@ then
 	SENSOR_NAME=$(sensortab_names_get_on_auto "1")
 fi
 
-# see if any sensors are disabled
-for i in $SENSOR_NAME; do
-	if grep -q "#$i" /etc/nsm/sensortab; then
-		echo "$i disabled, exiting."
+# see if any sensors are disabled or nonexistent
+for SENSOR in $SENSOR_NAME; do
+	if grep -q -P "#$SENSOR\t" /etc/nsm/sensortab; then
+		echo "$SENSOR disabled, exiting."
+		exit 1
+	fi
+	if ! grep -q -P "$SENSOR\t" /etc/nsm/sensortab; then
+		echo "$SENSOR not found, exiting."
 		exit 1
 	fi
 done
--- securityonion-nsmnow-admin-scripts-20120724.orig/usr/sbin/nsm_sensor_ps-status
+++ securityonion-nsmnow-admin-scripts-20120724/usr/sbin/nsm_sensor_ps-status
@@ -292,10 +292,14 @@ then
 	SENSOR_NAME=$(sensortab_names_get_on_auto "1")
 fi
 	
-# see if any sensors are disabled
-for i in $SENSOR_NAME; do
-	if grep -q "#$i" /etc/nsm/sensortab; then
-		echo "$i disabled, exiting."
+# see if any sensors are disabled or nonexistent
+for SENSOR in $SENSOR_NAME; do
+	if grep -q -P "#$SENSOR\t" /etc/nsm/sensortab; then
+		echo "$SENSOR disabled, exiting."
+		exit 1
+	fi
+	if ! grep -q -P "$SENSOR\t" /etc/nsm/sensortab; then
+		echo "$SENSOR not found, exiting."
 		exit 1
 	fi
 done
--- securityonion-nsmnow-admin-scripts-20120724.orig/usr/sbin/nsm_sensor_ps-stop
+++ securityonion-nsmnow-admin-scripts-20120724/usr/sbin/nsm_sensor_ps-stop
@@ -292,10 +292,14 @@ then
 	SENSOR_NAME=$(sensortab_names_get_on_auto "1")
 fi
 
-# see if any sensors are disabled
-for i in $SENSOR_NAME; do
-	if grep -q "#$i" /etc/nsm/sensortab; then
-		echo "$i disabled, exiting."
+# see if any sensors are disabled or nonexistent
+for SENSOR in $SENSOR_NAME; do
+	if grep -q -P "#$SENSOR\t" /etc/nsm/sensortab; then
+		echo "$SENSOR disabled, exiting."
+		exit 1
+	fi
+	if ! grep -q -P "$SENSOR\t" /etc/nsm/sensortab; then
+		echo "$SENSOR not found, exiting."
 		exit 1
 	fi
 done
