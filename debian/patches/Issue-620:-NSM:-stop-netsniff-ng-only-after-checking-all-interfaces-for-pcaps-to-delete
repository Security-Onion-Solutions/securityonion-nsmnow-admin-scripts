Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-nsmnow-admin-scripts (20120724-0ubuntu0securityonion89) precise; urgency=low
 .
   * Issue 620: NSM: stop netsniff-ng only after checking all interfaces for pcaps to delete
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- securityonion-nsmnow-admin-scripts-20120724.orig/usr/lib/nsmnow/lib-nsm-sensor-utils
+++ securityonion-nsmnow-admin-scripts-20120724/usr/lib/nsmnow/lib-nsm-sensor-utils
@@ -351,9 +351,17 @@ sensor_cleandisk()
 			REMOVED="yes"
 		fi
 
+		# if no interfaces have any more pcaps to delete, then we'll stop netsniff-ng
+		NUMBER_OF_SENSORS=0
+		SENSORS_WITH_NO_PCAPS_TO_DELETE=0
+
 		# Delete oldest day's worth of logs from each of the sensors in /nsm/sensor_data/
 		for SENSOR in "$SENSOR_DIR"/*
 		do
+			
+			# Keep count of the number of sensors
+			let NUMBER_OF_SENSORS++
+
 			# find the oldest dailylogs directory and exclude today
 			OLDEST_DIR=$(ls $SENSOR/dailylogs | sort | grep -v $TODAY | head -n 1)
 			if [ -z "$OLDEST_DIR" -o "$OLDEST_DIR" == ".." -o "$OLDEST_DIR" == "." ]
@@ -367,11 +375,10 @@ sensor_cleandisk()
 					rm -f "$PCAP"
 				        CUR_USAGE=$(df -P $SENSOR_DIR | grep -v -i filesystem | awk '{print $5}' | tr -d %)
 				done
-				# if we're out of pcaps to delete, then stop writing pcaps
+				# if we're out of pcaps to delete, then increment variable
 				if [ `ls $SENSOR/dailylogs/$TODAY/snort.log.* | wc -l` -le 1 ]; then
 					echo_msg 1 "${RED}no old pcaps available to clean up in $SENSOR/dailylogs/"
-					echo_msg 1 "${RED}stopping pcap!"
-					/usr/sbin/nsm_sensor_ps-stop --only-pcap > /dev/null 2>&1
+					let SENSORS_WITH_NO_PCAPS_TO_DELETE++
 				fi
 			else
 				# there are pcaps from previous days, so delete the oldest day's worth of pcaps
@@ -379,6 +386,7 @@ sensor_cleandisk()
 				rm -rf "$SENSOR"/dailylogs/"$OLDEST_DIR"
 				REMOVED="yes"
 			fi
+
 			# find the oldest argus files and exclude today
 			OLDEST_ARGUS=$(ls $SENSOR/argus | sort | grep -v $TODAY | head -n 1)
 			if [ -z "$OLDEST_ARGUS" -o "$OLDEST_ARGUS" == ".." -o "$OLDEST_ARGUS" == "." ]
@@ -389,6 +397,7 @@ sensor_cleandisk()
 				rm -f "$SENSOR"/argus/"$OLDEST_ARGUS"
 				REMOVED="yes"
 			fi
+
 			# find the oldest SURICATA unified2 files in $SENSOR/ and exclude today
 			# NOTE: --time-style="long-iso" must be used so that the script works properly in a cron job where the locale is not set
 			OLDEST_UNIFIED2=$(ls -l --time-style="long-iso" $SENSOR/snort.unified2* 2>/dev/null | awk '{print $6 " " $8}' |sort | grep -v $TODAY | head -n 1)
@@ -406,6 +415,7 @@ sensor_cleandisk()
 				done
 				REMOVED="yes"
 			fi
+
                         # find the oldest SNORT unified2 files in $SENSOR/snort-? and exclude today
                         # NOTE: --time-style="long-iso" must be used so that the script works properly in a cron job where the locale is not set
                         OLDEST_UNIFIED2=$(ls -l --time-style="long-iso" $SENSOR/snort-?/snort.unified2* 2>/dev/null | awk '{print $6 " " $8}' |sort | grep -v $TODAY | head -n 1)
@@ -425,6 +435,13 @@ sensor_cleandisk()
                         fi
 
 		done
+
+		# if we're out of pcaps to delete for all sensors interfaces, then stop writing pcaps
+		if [ "$SENSORS_WITH_NO_PCAPS_TO_DELETE" -ne 0 -a "$SENSORS_WITH_NO_PCAPS_TO_DELETE" -eq "$NUMBER_OF_SENSORS" ]; then
+			echo_msg 1 "${RED}stopping pcap!"
+			/usr/sbin/nsm_sensor_ps-stop --only-pcap > /dev/null 2>&1
+		fi
+
 		if [ "$REMOVED" == "yes" ]
 		then
 			# run cleandisk again as rm'ing one file might been enough
